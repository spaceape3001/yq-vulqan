////////////////////////////////////////////////////////////////////////////////
//
//  YOUR QUILL
//
////////////////////////////////////////////////////////////////////////////////

#include <tachyon/os/KeyCode.hpp>
#include <yq/meta/Init.hpp>

#include <GLFW/glfw3.h>
#include <imgui.h>

namespace yq::tachyon {
    int         encode(KeyCode kc, KeyCodex cdx)
    {
        switch(cdx){
        case KeyCodex::GLFW:
            return encode_glfw(kc);
        case KeyCodex::ImGui:
            return encode_imgui(kc);
        default:
            return -1;
        }
    }
    
    int         encode_glfw(KeyCode kc)
    {
        switch(kc){
        case KeyCode::Unknown:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::Space:
            return GLFW_KEY_SPACE;
        case KeyCode::Apostrophe:
            return GLFW_KEY_APOSTROPHE;
        case KeyCode::Comma:
            return GLFW_KEY_COMMA;
        case KeyCode::Minus:
            return GLFW_KEY_MINUS;
        case KeyCode::Period:
            return GLFW_KEY_PERIOD;
        case KeyCode::Slash:
            return GLFW_KEY_SLASH;
        case KeyCode::Zero:
            return GLFW_KEY_0;
        case KeyCode::One:
            return GLFW_KEY_1;
        case KeyCode::Two:
            return GLFW_KEY_2;
        case KeyCode::Three:
            return GLFW_KEY_3;
        case KeyCode::Four:
            return GLFW_KEY_4;
        case KeyCode::Five:
            return GLFW_KEY_5;
        case KeyCode::Six:
            return GLFW_KEY_6;
        case KeyCode::Seven:
            return GLFW_KEY_7;
        case KeyCode::Eight:
            return GLFW_KEY_8;
        case KeyCode::Nine:
            return GLFW_KEY_9;
        case KeyCode::Semicolon:
            return GLFW_KEY_SEMICOLON;
        case KeyCode::Equal:
            return GLFW_KEY_EQUAL;
        case KeyCode::A:
            return GLFW_KEY_A;
        case KeyCode::B:
            return GLFW_KEY_B;
        case KeyCode::C:
            return GLFW_KEY_C;
        case KeyCode::D:
            return GLFW_KEY_D;
        case KeyCode::E:
            return GLFW_KEY_E;
        case KeyCode::F:
            return GLFW_KEY_F;
        case KeyCode::G:
            return GLFW_KEY_G;
        case KeyCode::H:
            return GLFW_KEY_H;
        case KeyCode::I:
            return GLFW_KEY_I;
        case KeyCode::J:
            return GLFW_KEY_J;
        case KeyCode::K:
            return GLFW_KEY_K;
        case KeyCode::L:
            return GLFW_KEY_L;
        case KeyCode::M:
            return GLFW_KEY_M;
        case KeyCode::N:
            return GLFW_KEY_N;
        case KeyCode::O:
            return GLFW_KEY_O;
        case KeyCode::P:
            return GLFW_KEY_P;
        case KeyCode::Q:
            return GLFW_KEY_Q;
        case KeyCode::R:
            return GLFW_KEY_R;
        case KeyCode::S:
            return GLFW_KEY_S;
        case KeyCode::T:
            return GLFW_KEY_T;
        case KeyCode::U:
            return GLFW_KEY_U;
        case KeyCode::V:
            return GLFW_KEY_V;
        case KeyCode::W:
            return GLFW_KEY_W;
        case KeyCode::X:
            return GLFW_KEY_X;
        case KeyCode::Y:
            return GLFW_KEY_Y;
        case KeyCode::Z:
            return GLFW_KEY_Z;
        case KeyCode::LeftBracket:
            return GLFW_KEY_LEFT_BRACKET;
        case KeyCode::Backslash:
            return GLFW_KEY_BACKSLASH;
        case KeyCode::RightBracket:
            return GLFW_KEY_RIGHT_BRACKET;
        case KeyCode::GraveAccent:
            return GLFW_KEY_GRAVE_ACCENT;
        case KeyCode::World1:
            return GLFW_KEY_WORLD_1;
        case KeyCode::World2:
            return GLFW_KEY_WORLD_2;
        case KeyCode::Escape:
            return GLFW_KEY_ESCAPE;
        case KeyCode::Enter:
            return GLFW_KEY_ENTER;
        case KeyCode::Tab:
            return GLFW_KEY_TAB;
        case KeyCode::Backspace:
            return GLFW_KEY_BACKSPACE;
        case KeyCode::Insert:
            return GLFW_KEY_INSERT;
        case KeyCode::Delete:
            return GLFW_KEY_DELETE;
        case KeyCode::RightArrow:
            return GLFW_KEY_RIGHT;
        case KeyCode::LeftArrow:
            return GLFW_KEY_LEFT;
        case KeyCode::DownArrow:
            return GLFW_KEY_DOWN;
        case KeyCode::UpArrow:
            return GLFW_KEY_UP;
        case KeyCode::PageUp:
            return GLFW_KEY_PAGE_UP;
        case KeyCode::PageDown:
            return GLFW_KEY_PAGE_DOWN;
        case KeyCode::Home:
            return GLFW_KEY_HOME;
        case KeyCode::End:
            return GLFW_KEY_END;
        case KeyCode::CapsLock:
            return GLFW_KEY_CAPS_LOCK;
        case KeyCode::ScrollLock:
            return GLFW_KEY_SCROLL_LOCK;
        case KeyCode::NumLock:
            return GLFW_KEY_NUM_LOCK;
        case KeyCode::PrintScreen:
            return GLFW_KEY_PRINT_SCREEN;
        case KeyCode::Pause:
            return GLFW_KEY_PAUSE;
        case KeyCode::F1:
            return GLFW_KEY_F1;
        case KeyCode::F2:
            return GLFW_KEY_F2;
        case KeyCode::F3:
            return GLFW_KEY_F3;
        case KeyCode::F4:
            return GLFW_KEY_F4;
        case KeyCode::F5:
            return GLFW_KEY_F5;
        case KeyCode::F6:
            return GLFW_KEY_F6;
        case KeyCode::F7:
            return GLFW_KEY_F7;
        case KeyCode::F8:
            return GLFW_KEY_F8;
        case KeyCode::F9:
            return GLFW_KEY_F9;
        case KeyCode::F10:
            return GLFW_KEY_F10;
        case KeyCode::F11:
            return GLFW_KEY_F11;
        case KeyCode::F12:
            return GLFW_KEY_F12;
        case KeyCode::F13:
            return GLFW_KEY_F13;
        case KeyCode::F14:
            return GLFW_KEY_F14;
        case KeyCode::F15:
            return GLFW_KEY_F15;
        case KeyCode::F16:
            return GLFW_KEY_F16;
        case KeyCode::F17:
            return GLFW_KEY_F17;
        case KeyCode::F18:
            return GLFW_KEY_F18;
        case KeyCode::F19:
            return GLFW_KEY_F19;
        case KeyCode::F20:
            return GLFW_KEY_F20;
        case KeyCode::F21:
            return GLFW_KEY_F21;
        case KeyCode::F22:
            return GLFW_KEY_F22;
        case KeyCode::F23:
            return GLFW_KEY_F23;
        case KeyCode::F24:
            return GLFW_KEY_F24;
        case KeyCode::F25:
            return GLFW_KEY_F25;
        case KeyCode::Kp0:
            return GLFW_KEY_KP_0;
        case KeyCode::Kp1:
            return GLFW_KEY_KP_1;
        case KeyCode::Kp2:
            return GLFW_KEY_KP_2;
        case KeyCode::Kp3:
            return GLFW_KEY_KP_3;
        case KeyCode::Kp4:
            return GLFW_KEY_KP_4;
        case KeyCode::Kp5:
            return GLFW_KEY_KP_5;
        case KeyCode::Kp6:
            return GLFW_KEY_KP_6;
        case KeyCode::Kp7:
            return GLFW_KEY_KP_7;
        case KeyCode::Kp8:
            return GLFW_KEY_KP_8;
        case KeyCode::Kp9:
            return GLFW_KEY_KP_9;
        case KeyCode::KpDecimal:
            return GLFW_KEY_KP_DECIMAL;
        case KeyCode::KpDivide:
            return GLFW_KEY_KP_DIVIDE;
        case KeyCode::KpMultiply:
            return GLFW_KEY_KP_MULTIPLY;
        case KeyCode::KpSubtract:
            return GLFW_KEY_KP_SUBTRACT;
        case KeyCode::KpAdd:
            return GLFW_KEY_KP_ADD;
        case KeyCode::KpEnter:
            return GLFW_KEY_KP_ENTER;
        case KeyCode::KpEqual:
            return GLFW_KEY_KP_EQUAL;
        case KeyCode::LeftShift:
            return GLFW_KEY_LEFT_SHIFT;
        case KeyCode::LeftControl:
            return GLFW_KEY_LEFT_CONTROL;
        case KeyCode::LeftAlt:
            return GLFW_KEY_LEFT_ALT;
        case KeyCode::LeftSuper:
            return GLFW_KEY_LEFT_SUPER;
        case KeyCode::RightShift:
            return GLFW_KEY_RIGHT_SHIFT;
        case KeyCode::RightControl:
            return GLFW_KEY_RIGHT_CONTROL;
        case KeyCode::RightAlt:
            return GLFW_KEY_RIGHT_ALT;
        case KeyCode::RightSuper:
            return GLFW_KEY_RIGHT_SUPER;
        case KeyCode::Menu:
            return GLFW_KEY_MENU;
        case KeyCode::ModShift:
            return GLFW_KEY_LEFT_SHIFT;
        case KeyCode::ModControl:
            return GLFW_KEY_LEFT_CONTROL;
        case KeyCode::ModAlt:
            return GLFW_KEY_LEFT_ALT;
        case KeyCode::ModSuper:
            return GLFW_KEY_LEFT_SUPER;
        case KeyCode::GpStart:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpBack:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpFaceLeft:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpFaceRight:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpFaceUp:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpFaceDown:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpDPadLeft:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpDPadRight:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpDPadUp:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpDPadDown:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpL1:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpR1:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpL2:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpR2:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpL3:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpR3:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpLStickLeft:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpLStickRight:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpLStickUp:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpLStickDown:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpRStickLeft:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpRStickRight:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpRStickUp:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::GpRStickDown:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::MsBtnLeft:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::MsBtnMiddle:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::MsBtnRight:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::MsX1:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::MsX2:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::MsWheelX:
            return GLFW_KEY_UNKNOWN;
        case KeyCode::MsWheelY:
            return GLFW_KEY_UNKNOWN;
        default:
            return GLFW_KEY_UNKNOWN;
        }
    }
    
    
    /*! \brief Encodes ImGui keycode
    
        \note return type is integer to avoid an inclusion of imgui.h
    */
    int         encode_imgui(KeyCode kc)
    {
        switch(kc){
        case KeyCode::Unknown:
            return ImGuiKey_None;
        case KeyCode::Space:
            return ImGuiKey_Space;
        case KeyCode::Apostrophe:
            return ImGuiKey_Apostrophe;
        case KeyCode::Comma:
            return ImGuiKey_Comma;
        case KeyCode::Minus:
            return ImGuiKey_Minus;
        case KeyCode::Period:
            return ImGuiKey_Period;
        case KeyCode::Slash:
            return ImGuiKey_Slash;
        case KeyCode::Zero: 
            return ImGuiKey_0;
        case KeyCode::One:
            return ImGuiKey_1;
        case KeyCode::Two:
            return ImGuiKey_2;
        case KeyCode::Three:
            return ImGuiKey_3;
        case KeyCode::Four:
            return ImGuiKey_4;
        case KeyCode::Five:
            return ImGuiKey_5;
        case KeyCode::Six:
            return ImGuiKey_6;
        case KeyCode::Seven:
            return ImGuiKey_7;
        case KeyCode::Eight:
            return ImGuiKey_8;
        case KeyCode::Nine:
            return ImGuiKey_9;
        case KeyCode::Semicolon:
            return ImGuiKey_Semicolon;
        case KeyCode::Equal:
            return ImGuiKey_Equal;
        case KeyCode::A:
            return ImGuiKey_A;
        case KeyCode::B:
            return ImGuiKey_B;
        case KeyCode::C:
            return ImGuiKey_C;
        case KeyCode::D:
            return ImGuiKey_D;
        case KeyCode::E:
            return ImGuiKey_E;
        case KeyCode::F:
            return ImGuiKey_F;
        case KeyCode::G:
            return ImGuiKey_G;
        case KeyCode::H:
            return ImGuiKey_H;
        case KeyCode::I:
            return ImGuiKey_I;
        case KeyCode::J:
            return ImGuiKey_J;
        case KeyCode::K:
            return ImGuiKey_K;
        case KeyCode::L:
            return ImGuiKey_L;
        case KeyCode::M:
            return ImGuiKey_M;
        case KeyCode::N:
            return ImGuiKey_N;
        case KeyCode::O:
            return ImGuiKey_O;
        case KeyCode::P:
            return ImGuiKey_P;
        case KeyCode::Q:
            return ImGuiKey_Q;
        case KeyCode::R:
            return ImGuiKey_R;
        case KeyCode::S:
            return ImGuiKey_S;
        case KeyCode::T:
            return ImGuiKey_T;
        case KeyCode::U:
            return ImGuiKey_U;
        case KeyCode::V:
            return ImGuiKey_V;
        case KeyCode::W:
            return ImGuiKey_W;
        case KeyCode::X:
            return ImGuiKey_X;
        case KeyCode::Y:
            return ImGuiKey_Y;
        case KeyCode::Z:
            return ImGuiKey_Z;
        case KeyCode::LeftBracket:
            return ImGuiKey_LeftBracket;
        case KeyCode::Backslash:
            return ImGuiKey_Backslash;
        case KeyCode::RightBracket:
            return ImGuiKey_RightBracket;
        case KeyCode::GraveAccent:
            return ImGuiKey_GraveAccent;
        case KeyCode::World1:
            return ImGuiKey_None;
        case KeyCode::World2:
            return ImGuiKey_None;
        case KeyCode::Escape:
            return ImGuiKey_Escape;
        case KeyCode::Enter:
            return ImGuiKey_Enter;
        case KeyCode::Tab:
            return ImGuiKey_Tab;
        case KeyCode::Backspace:
            return ImGuiKey_Backspace;
        case KeyCode::Insert:
            return ImGuiKey_Insert;
        case KeyCode::Delete:
            return ImGuiKey_Delete;
        case KeyCode::RightArrow:
            return ImGuiKey_RightArrow;
        case KeyCode::LeftArrow:
            return ImGuiKey_LeftArrow;
        case KeyCode::DownArrow:
            return ImGuiKey_DownArrow;
        case KeyCode::UpArrow:
            return ImGuiKey_UpArrow;
        case KeyCode::PageUp:
            return ImGuiKey_PageUp;
        case KeyCode::PageDown:
            return ImGuiKey_PageDown;
        case KeyCode::Home:
            return ImGuiKey_Home;
        case KeyCode::End:
            return ImGuiKey_End;
        case KeyCode::CapsLock:
            return ImGuiKey_CapsLock;
        case KeyCode::ScrollLock:
            return ImGuiKey_ScrollLock;
        case KeyCode::NumLock:
            return ImGuiKey_NumLock;
        case KeyCode::PrintScreen:
            return ImGuiKey_PrintScreen;
        case KeyCode::Pause:
            return ImGuiKey_Pause;
        case KeyCode::F1:
            return ImGuiKey_F1;
        case KeyCode::F2:
            return ImGuiKey_F2;
        case KeyCode::F3:
            return ImGuiKey_F3;
        case KeyCode::F4:
            return ImGuiKey_F4;
        case KeyCode::F5:
            return ImGuiKey_F5;
        case KeyCode::F6:
            return ImGuiKey_F6;
        case KeyCode::F7:
            return ImGuiKey_F7;
        case KeyCode::F8:
            return ImGuiKey_F8;
        case KeyCode::F9:
            return ImGuiKey_F9;
        case KeyCode::F10:
            return ImGuiKey_F10;
        case KeyCode::F11:
            return ImGuiKey_F11;
        case KeyCode::F12:
            return ImGuiKey_F12;
        case KeyCode::F13:
            return ImGuiKey_None;
        case KeyCode::F14:
            return ImGuiKey_None;
        case KeyCode::F15:
            return ImGuiKey_None;
        case KeyCode::F16:
            return ImGuiKey_None;
        case KeyCode::F17:
            return ImGuiKey_None;
        case KeyCode::F18:
            return ImGuiKey_None;
        case KeyCode::F19:
            return ImGuiKey_None;
        case KeyCode::F20:
            return ImGuiKey_None;
        case KeyCode::F21:
            return ImGuiKey_None;
        case KeyCode::F22:
            return ImGuiKey_None;
        case KeyCode::F23:
            return ImGuiKey_None;
        case KeyCode::F24:
            return ImGuiKey_None;
        case KeyCode::F25:
            return ImGuiKey_None;
        case KeyCode::Kp0:
            return ImGuiKey_Keypad0;
        case KeyCode::Kp1:
            return ImGuiKey_Keypad1;
        case KeyCode::Kp2:
            return ImGuiKey_Keypad2;
        case KeyCode::Kp3:
            return ImGuiKey_Keypad3;
        case KeyCode::Kp4:
            return ImGuiKey_Keypad4;
        case KeyCode::Kp5:
            return ImGuiKey_Keypad5;
        case KeyCode::Kp6:
            return ImGuiKey_Keypad6;
        case KeyCode::Kp7:
            return ImGuiKey_Keypad7;
        case KeyCode::Kp8:
            return ImGuiKey_Keypad9;
        case KeyCode::Kp9:
            return ImGuiKey_Keypad9;
        case KeyCode::KpDecimal:
            return ImGuiKey_KeypadDecimal;
        case KeyCode::KpDivide:
            return ImGuiKey_KeypadDivide;
        case KeyCode::KpMultiply:
            return ImGuiKey_KeypadMultiply;
        case KeyCode::KpSubtract:
            return ImGuiKey_KeypadSubtract;
        case KeyCode::KpAdd:
            return ImGuiKey_KeypadAdd;
        case KeyCode::KpEnter:
            return ImGuiKey_KeypadEnter;
        case KeyCode::KpEqual:
            return ImGuiKey_KeypadEqual;
        case KeyCode::LeftShift:
            return ImGuiKey_LeftShift;
        case KeyCode::LeftControl:
            return ImGuiKey_LeftCtrl;
        case KeyCode::LeftAlt:
            return ImGuiKey_LeftAlt;
        case KeyCode::LeftSuper:
            return ImGuiKey_LeftSuper;
        case KeyCode::RightShift:
            return ImGuiKey_RightShift;
        case KeyCode::RightControl:
            return ImGuiKey_RightCtrl;
        case KeyCode::RightAlt:
            return ImGuiKey_RightAlt;
        case KeyCode::RightSuper:
            return ImGuiKey_RightSuper;
        case KeyCode::Menu:
            return ImGuiKey_Menu;
        case KeyCode::ModShift:
            return ImGuiKey_ModShift;
        case KeyCode::ModControl:
            return ImGuiKey_ModCtrl;
        case KeyCode::ModAlt:
            return ImGuiKey_ModAlt;
        case KeyCode::ModSuper:
            return ImGuiKey_ModSuper;
        case KeyCode::GpStart:
            return ImGuiKey_GamepadStart;
        case KeyCode::GpBack:
            return ImGuiKey_GamepadBack;
        case KeyCode::GpFaceLeft:
            return ImGuiKey_GamepadFaceLeft;
        case KeyCode::GpFaceRight:
            return ImGuiKey_GamepadFaceRight;
        case KeyCode::GpFaceUp:
            return ImGuiKey_GamepadFaceUp;
        case KeyCode::GpFaceDown:
            return ImGuiKey_GamepadFaceDown;
        case KeyCode::GpDPadLeft:
            return ImGuiKey_GamepadDpadLeft;
        case KeyCode::GpDPadRight:
            return ImGuiKey_GamepadDpadRight;
        case KeyCode::GpDPadUp:
            return ImGuiKey_GamepadDpadUp;
        case KeyCode::GpDPadDown:
            return ImGuiKey_GamepadDpadDown;
        case KeyCode::GpL1:
            return ImGuiKey_GamepadL1;
        case KeyCode::GpR1:
            return ImGuiKey_GamepadR1;
        case KeyCode::GpL2:
            return ImGuiKey_GamepadL2;
        case KeyCode::GpR2:
            return ImGuiKey_GamepadR2;
        case KeyCode::GpL3:
            return ImGuiKey_GamepadL3;
        case KeyCode::GpR3:
            return ImGuiKey_GamepadR3;
        case KeyCode::GpLStickLeft:
            return ImGuiKey_GamepadLStickLeft;
        case KeyCode::GpLStickRight:
            return ImGuiKey_GamepadLStickRight;
        case KeyCode::GpLStickUp:
            return ImGuiKey_GamepadLStickUp;
        case KeyCode::GpLStickDown:
            return ImGuiKey_GamepadLStickDown;
        case KeyCode::GpRStickLeft:
            return ImGuiKey_GamepadRStickLeft;
        case KeyCode::GpRStickRight:
            return ImGuiKey_GamepadRStickRight;
        case KeyCode::GpRStickUp:
            return ImGuiKey_GamepadRStickUp;
        case KeyCode::GpRStickDown:
            return ImGuiKey_GamepadRStickDown;
        case KeyCode::MsBtnLeft:
            return ImGuiKey_MouseLeft;
        case KeyCode::MsBtnMiddle:
            return ImGuiKey_MouseMiddle;
        case KeyCode::MsBtnRight:
            return ImGuiKey_MouseRight;
        case KeyCode::MsX1:
            return ImGuiKey_MouseX1;
        case KeyCode::MsX2:
            return ImGuiKey_MouseX2;
        case KeyCode::MsWheelX:
            return ImGuiKey_MouseWheelX;
        case KeyCode::MsWheelY:
            return ImGuiKey_MouseWheelY;
        default:
            return ImGuiKey_None;
        }
    }
    
    KeyCode     keycode(int kc, KeyCodex cdx)
    {
        switch(cdx){
        case KeyCodex::GLFW:
            return keycode_glfw(kc);
        case KeyCodex::ImGui:
            return keycode_imgui(kc);
        default:
            return KeyCode::Unknown;
        }
    }
    
    KeyCode     keycode_glfw(int kc)
    {
        switch(kc){
        case GLFW_KEY_UNKNOWN:
            return KeyCode::Unknown;
        case 0:
            return KeyCode::None;
        case GLFW_KEY_SPACE:
            return KeyCode::Space;
        case GLFW_KEY_APOSTROPHE:
            return KeyCode::Apostrophe;
        case GLFW_KEY_COMMA:
            return KeyCode::Comma;
        case GLFW_KEY_MINUS:
            return KeyCode::Minus;
        case GLFW_KEY_PERIOD:
            return KeyCode::Period;
        case GLFW_KEY_SLASH:
            return KeyCode::Slash;
        case GLFW_KEY_0:
            return KeyCode::Zero;
        case GLFW_KEY_1:
            return KeyCode::One;
        case GLFW_KEY_2:
            return KeyCode::Two;
        case GLFW_KEY_3:
            return KeyCode::Three;
        case GLFW_KEY_4:
            return KeyCode::Four;
        case GLFW_KEY_5:
            return KeyCode::Five;
        case GLFW_KEY_6:
            return KeyCode::Six;
        case GLFW_KEY_7:
            return KeyCode::Seven;
        case GLFW_KEY_8:
            return KeyCode::Eight;
        case GLFW_KEY_9:
            return KeyCode::Nine;
        case GLFW_KEY_SEMICOLON:
            return KeyCode::Semicolon;
        case GLFW_KEY_EQUAL:
            return KeyCode::Equal;
        case GLFW_KEY_A:
            return KeyCode::A;
        case GLFW_KEY_B:
            return KeyCode::B;
        case GLFW_KEY_C:
            return KeyCode::C;
        case GLFW_KEY_D:
            return KeyCode::D;
        case GLFW_KEY_E:
            return KeyCode::E;
        case GLFW_KEY_F:
            return KeyCode::F;
        case GLFW_KEY_G:
            return KeyCode::G;
        case GLFW_KEY_H:
            return KeyCode::H;
        case GLFW_KEY_I:
            return KeyCode::I;
        case GLFW_KEY_J:
            return KeyCode::J;
        case GLFW_KEY_K:
            return KeyCode::K;
        case GLFW_KEY_L:
            return KeyCode::L;
        case GLFW_KEY_M:
            return KeyCode::M;
        case GLFW_KEY_N:
            return KeyCode::N;
        case GLFW_KEY_O:
            return KeyCode::O;
        case GLFW_KEY_P:
            return KeyCode::P;
        case GLFW_KEY_Q:
            return KeyCode::Q;
        case GLFW_KEY_R:
            return KeyCode::R;
        case GLFW_KEY_S:
            return KeyCode::S;
        case GLFW_KEY_T:
            return KeyCode::T;
        case GLFW_KEY_U:
            return KeyCode::U;
        case GLFW_KEY_V:
            return KeyCode::V;
        case GLFW_KEY_W:
            return KeyCode::W;
        case GLFW_KEY_X:
            return KeyCode::X;
        case GLFW_KEY_Y:
            return KeyCode::Y;
        case GLFW_KEY_Z:
            return KeyCode::Z;
        case GLFW_KEY_LEFT_BRACKET:
            return KeyCode::LeftBracket;
        case GLFW_KEY_BACKSLASH:
            return KeyCode::Backslash;
        case GLFW_KEY_RIGHT_BRACKET:
            return KeyCode::RightBracket;
        case GLFW_KEY_GRAVE_ACCENT:
            return KeyCode::GraveAccent;
        case GLFW_KEY_WORLD_1:
            return KeyCode::World1;
        case GLFW_KEY_WORLD_2:
            return KeyCode::World2;
        case GLFW_KEY_ESCAPE:
            return KeyCode::Escape;
        case GLFW_KEY_ENTER:
            return KeyCode::Enter;
        case GLFW_KEY_TAB:
            return KeyCode::Tab;
        case GLFW_KEY_BACKSPACE:
            return KeyCode::Backspace;
        case GLFW_KEY_INSERT:
            return KeyCode::Insert;
        case GLFW_KEY_DELETE:
            return KeyCode::Delete;
        case GLFW_KEY_RIGHT:
            return KeyCode::RightArrow;
        case GLFW_KEY_LEFT:
            return KeyCode::LeftArrow;
        case GLFW_KEY_DOWN:
            return KeyCode::DownArrow;
        case GLFW_KEY_UP:
            return KeyCode::UpArrow;
        case GLFW_KEY_PAGE_UP:
            return KeyCode::PageUp;
        case GLFW_KEY_PAGE_DOWN:
            return KeyCode::PageDown;
        case GLFW_KEY_HOME:
            return KeyCode::Home;
        case GLFW_KEY_END:
            return KeyCode::End;
        case GLFW_KEY_CAPS_LOCK:
            return KeyCode::CapsLock;
        case GLFW_KEY_SCROLL_LOCK:
            return KeyCode::NumLock;
        case GLFW_KEY_PRINT_SCREEN:
            return KeyCode::PrintScreen;
        case GLFW_KEY_PAUSE:
            return KeyCode::Pause;
        case GLFW_KEY_F1:
            return KeyCode::F1;
        case GLFW_KEY_F2:
            return KeyCode::F2;
        case GLFW_KEY_F3:
            return KeyCode::F3;
        case GLFW_KEY_F4:
            return KeyCode::F4;
        case GLFW_KEY_F5:
            return KeyCode::F5;
        case GLFW_KEY_F6:
            return KeyCode::F6;
        case GLFW_KEY_F7:
            return KeyCode::F7;
        case GLFW_KEY_F8:
            return KeyCode::F8;
        case GLFW_KEY_F9:
            return KeyCode::F9;
        case GLFW_KEY_F10:
            return KeyCode::F10;
        case GLFW_KEY_F11:
            return KeyCode::F11;
        case GLFW_KEY_F12:
            return KeyCode::F12;
        case GLFW_KEY_F13:
            return KeyCode::F13;
        case GLFW_KEY_F14:
            return KeyCode::F14;
        case GLFW_KEY_F15:
            return KeyCode::F15;
        case GLFW_KEY_F16:
            return KeyCode::F16;
        case GLFW_KEY_F17:
            return KeyCode::F17;
        case GLFW_KEY_F18:
            return KeyCode::F18;
        case GLFW_KEY_F19:
            return KeyCode::F19;
        case GLFW_KEY_F20:
            return KeyCode::F20;
        case GLFW_KEY_F21:
            return KeyCode::F21;
        case GLFW_KEY_F22:
            return KeyCode::F22;
        case GLFW_KEY_F23:
            return KeyCode::F23;
        case GLFW_KEY_F24:
            return KeyCode::F24;
        case GLFW_KEY_F25:
            return KeyCode::F25;
        case GLFW_KEY_KP_0:
            return KeyCode::Kp0;
        case GLFW_KEY_KP_1:
            return KeyCode::Kp1;
        case GLFW_KEY_KP_2:
            return KeyCode::Kp2;
        case GLFW_KEY_KP_3:
            return KeyCode::Kp3;
        case GLFW_KEY_KP_4:
            return KeyCode::Kp4;
        case GLFW_KEY_KP_5:
            return KeyCode::Kp5;
        case GLFW_KEY_KP_6:
            return KeyCode::Kp6;
        case GLFW_KEY_KP_7:
            return KeyCode::Kp7;
        case GLFW_KEY_KP_8:
            return KeyCode::Kp8;
        case GLFW_KEY_KP_9:
            return KeyCode::Kp9;
        case GLFW_KEY_KP_DECIMAL:
            return KeyCode::KpDecimal;
        case GLFW_KEY_KP_DIVIDE:
            return KeyCode::KpDivide;
        case GLFW_KEY_KP_MULTIPLY:
            return KeyCode::KpMultiply;
        case GLFW_KEY_KP_SUBTRACT:
            return KeyCode::KpSubtract;
        case GLFW_KEY_KP_ADD:
            return KeyCode::KpAdd;
        case GLFW_KEY_KP_ENTER:
            return KeyCode::KpEnter;
        case GLFW_KEY_KP_EQUAL:
            return KeyCode::KpEqual;
        case GLFW_KEY_LEFT_SHIFT:
            return KeyCode::LeftShift;
        case GLFW_KEY_LEFT_CONTROL:
            return KeyCode::LeftControl;
        case GLFW_KEY_LEFT_ALT:
            return KeyCode::LeftAlt;
        case GLFW_KEY_LEFT_SUPER:
            return KeyCode::LeftSuper;
        case GLFW_KEY_RIGHT_SHIFT:
            return KeyCode::RightShift;
        case GLFW_KEY_RIGHT_CONTROL:
            return KeyCode::RightControl;
        case GLFW_KEY_RIGHT_ALT:
            return KeyCode::RightAlt;
        case GLFW_KEY_RIGHT_SUPER:
            return KeyCode::RightSuper;
        case GLFW_KEY_MENU:
            return KeyCode::Menu;
        default:
            return KeyCode::Unknown;
        }
    }
    
    KeyCode     keycode_imgui(int kc)
    {
        switch(kc){
        case ImGuiKey_None:
            return KeyCode::None;
        case ImGuiKey_Tab:
            return KeyCode::Tab;
        case ImGuiKey_LeftArrow:
            return KeyCode::LeftArrow;
        case ImGuiKey_RightArrow:
            return KeyCode::RightArrow;
        case ImGuiKey_UpArrow:
            return KeyCode::UpArrow;
        case ImGuiKey_DownArrow:
            return KeyCode::DownArrow;
        case ImGuiKey_PageUp:
            return KeyCode::PageUp;
        case ImGuiKey_PageDown:
            return KeyCode::PageDown;
        case ImGuiKey_Home:
            return KeyCode::Home;
        case ImGuiKey_End:
            return KeyCode::End;
        case ImGuiKey_Insert:
            return KeyCode::Insert;
        case ImGuiKey_Delete:
            return KeyCode::Delete;
        case ImGuiKey_Backspace:
            return KeyCode::Backspace;
        case ImGuiKey_Space:
            return KeyCode::Space;
        case ImGuiKey_Enter:
            return KeyCode::Enter;
        case ImGuiKey_Escape:
            return KeyCode::Escape;
        case ImGuiKey_LeftCtrl:
            return KeyCode::LeftControl;
        case ImGuiKey_LeftShift:
            return KeyCode::LeftShift;
        case ImGuiKey_LeftAlt:
            return KeyCode::LeftAlt;
        case ImGuiKey_LeftSuper:
            return KeyCode::LeftSuper;
        case ImGuiKey_RightCtrl:
            return KeyCode::RightControl;
        case ImGuiKey_RightShift:
            return KeyCode::RightShift;
        case ImGuiKey_RightAlt:
            return KeyCode::RightAlt;
        case ImGuiKey_RightSuper:
            return KeyCode::RightSuper;
        case ImGuiKey_Menu:
            return KeyCode::Menu;
        case ImGuiKey_0:
            return KeyCode::Zero;
        case ImGuiKey_1:
            return KeyCode::One;
        case ImGuiKey_2:
            return KeyCode::Two;
        case ImGuiKey_3:
            return KeyCode::Three;
        case ImGuiKey_4:
            return KeyCode::Four;
        case ImGuiKey_5:
            return KeyCode::Five;
        case ImGuiKey_6:
            return KeyCode::Six;
        case ImGuiKey_7:
            return KeyCode::Seven;
        case ImGuiKey_8:
            return KeyCode::Eight;
        case ImGuiKey_9:
            return KeyCode::Nine;
        case ImGuiKey_A:
            return KeyCode::A;
        case ImGuiKey_B:
            return KeyCode::B;
        case ImGuiKey_C:
            return KeyCode::C;
        case ImGuiKey_D:
            return KeyCode::D;
        case ImGuiKey_E:
            return KeyCode::E;
        case ImGuiKey_F:
            return KeyCode::F;
        case ImGuiKey_G:
            return KeyCode::G;
        case ImGuiKey_H:
            return KeyCode::H;
        case ImGuiKey_I:
            return KeyCode::I;
        case ImGuiKey_J:
            return KeyCode::J;
        case ImGuiKey_K:
            return KeyCode::K;
        case ImGuiKey_L:
            return KeyCode::L;
        case ImGuiKey_M:
            return KeyCode::M;
        case ImGuiKey_N:
            return KeyCode::N;
        case ImGuiKey_O:
            return KeyCode::O;
        case ImGuiKey_P:
            return KeyCode::P;
        case ImGuiKey_Q:
            return KeyCode::Q;
        case ImGuiKey_R:
            return KeyCode::R;
        case ImGuiKey_S:
            return KeyCode::S;
        case ImGuiKey_T:
            return KeyCode::T;
        case ImGuiKey_U:
            return KeyCode::U;
        case ImGuiKey_V:
            return KeyCode::V;
        case ImGuiKey_W:
            return KeyCode::W;
        case ImGuiKey_X:
            return KeyCode::X;
        case ImGuiKey_Y:
            return KeyCode::Y;
        case ImGuiKey_Z:
            return KeyCode::Z;
        case ImGuiKey_F1:
            return KeyCode::F1;
        case ImGuiKey_F2:
            return KeyCode::F2;
        case ImGuiKey_F3:
            return KeyCode::F3;
        case ImGuiKey_F4:
            return KeyCode::F4;
        case ImGuiKey_F5:
            return KeyCode::F5;
        case ImGuiKey_F6:
            return KeyCode::F6;
        case ImGuiKey_F7:
            return KeyCode::F7;
        case ImGuiKey_F8:
            return KeyCode::F8;
        case ImGuiKey_F9:
            return KeyCode::F9;
        case ImGuiKey_F10:
            return KeyCode::F10;
        case ImGuiKey_F11:
            return KeyCode::F11;
        case ImGuiKey_F12:
            return KeyCode::F12;
        case ImGuiKey_Apostrophe:
            return KeyCode::Apostrophe;
        case ImGuiKey_Comma:
            return KeyCode::Comma;
        case ImGuiKey_Minus:
            return KeyCode::Minus;
        case ImGuiKey_Period:
            return KeyCode::Period;
        case ImGuiKey_Slash:
            return KeyCode::Slash;
        case ImGuiKey_Semicolon:
            return KeyCode::Semicolon;
        case ImGuiKey_Equal:
            return KeyCode::Equal;
        case ImGuiKey_LeftBracket:
            return KeyCode::LeftBracket;
        case ImGuiKey_Backslash:
            return KeyCode::Backslash;
        case ImGuiKey_RightBracket:
            return KeyCode::RightBracket;
        case ImGuiKey_GraveAccent:
            return KeyCode::GraveAccent;
        case ImGuiKey_CapsLock:
            return KeyCode::CapsLock;
        case ImGuiKey_ScrollLock:
            return KeyCode::ScrollLock;
        case ImGuiKey_NumLock:
            return KeyCode::NumLock;
        case ImGuiKey_PrintScreen:
            return KeyCode::PrintScreen;
        case ImGuiKey_Pause:
            return KeyCode::Pause;
        case ImGuiKey_Keypad0:
            return KeyCode::Kp0;
        case ImGuiKey_Keypad1:
            return KeyCode::Kp1;
        case ImGuiKey_Keypad2:
            return KeyCode::Kp2;
        case ImGuiKey_Keypad3:
            return KeyCode::Kp3;
        case ImGuiKey_Keypad4:
            return KeyCode::Kp4;
        case ImGuiKey_Keypad5:
            return KeyCode::Kp5;
        case ImGuiKey_Keypad6:
            return KeyCode::Kp6;
        case ImGuiKey_Keypad7:
            return KeyCode::Kp7;
        case ImGuiKey_Keypad8:
            return KeyCode::Kp8;
        case ImGuiKey_Keypad9:
            return KeyCode::Kp9;
        case ImGuiKey_KeypadDecimal:
            return KeyCode::KpDecimal;
        case ImGuiKey_KeypadDivide:
            return KeyCode::KpDivide;
        case ImGuiKey_KeypadMultiply:
            return KeyCode::KpMultiply;
        case ImGuiKey_KeypadSubtract:
            return KeyCode::KpSubtract;
        case ImGuiKey_KeypadAdd:
            return KeyCode::KpAdd;
        case ImGuiKey_KeypadEnter:
            return KeyCode::KpEnter;
        case ImGuiKey_KeypadEqual:
            return KeyCode::KpEqual;
        case ImGuiKey_GamepadStart:
            return KeyCode::GpStart;
        case ImGuiKey_GamepadBack:
            return KeyCode::GpBack;
        case ImGuiKey_GamepadFaceLeft:
            return KeyCode::GpFaceLeft;
        case ImGuiKey_GamepadFaceRight:
            return KeyCode::GpFaceRight;
        case ImGuiKey_GamepadFaceUp:
            return KeyCode::GpFaceUp;
        case ImGuiKey_GamepadFaceDown:
            return KeyCode::GpFaceDown;
        case ImGuiKey_GamepadDpadLeft:
            return KeyCode::GpDPadLeft;
        case ImGuiKey_GamepadDpadRight:
            return KeyCode::GpDPadRight;
        case ImGuiKey_GamepadDpadUp:
            return KeyCode::GpDPadUp;
        case ImGuiKey_GamepadL1:
            return KeyCode::GpL1;
        case ImGuiKey_GamepadR1:
            return KeyCode::GpR1;
        case ImGuiKey_GamepadL2:
            return KeyCode::GpL2;
        case ImGuiKey_GamepadR2:
            return KeyCode::GpR2;
        case ImGuiKey_GamepadL3:
            return KeyCode::GpL3;
        case ImGuiKey_GamepadR3:
            return KeyCode::GpR3;
        case ImGuiKey_GamepadLStickLeft:    
            return KeyCode::GpLStickLeft;
        case ImGuiKey_GamepadLStickRight:
            return KeyCode::GpLStickRight;
        case ImGuiKey_GamepadLStickUp:
            return KeyCode::GpLStickUp;
        case ImGuiKey_GamepadLStickDown:
            return KeyCode::GpLStickDown;
        case ImGuiKey_GamepadRStickLeft:    
            return KeyCode::GpRStickLeft;
        case ImGuiKey_GamepadRStickRight:
            return KeyCode::GpRStickRight;
        case ImGuiKey_GamepadRStickUp:
            return KeyCode::GpRStickUp;
        case ImGuiKey_GamepadRStickDown:
            return KeyCode::GpRStickDown;
        case ImGuiKey_ModCtrl:
            return KeyCode::ModControl;
        case ImGuiKey_ModShift:
            return KeyCode::ModShift;
        case ImGuiKey_ModAlt:
            return KeyCode::ModAlt;
        case ImGuiKey_ModSuper:
            return KeyCode::ModSuper;
        case ImGuiKey_MouseLeft:
            return KeyCode::MsBtnLeft;
        case ImGuiKey_MouseRight:
            return KeyCode::MsBtnRight;
        case ImGuiKey_MouseMiddle:
            return KeyCode::MsBtnMiddle;
        case ImGuiKey_MouseX1:
            return KeyCode::MsX1;
        case ImGuiKey_MouseX2:
            return KeyCode::MsX2;
        case ImGuiKey_MouseWheelX:
            return KeyCode::MsWheelX;
        case ImGuiKey_MouseWheelY:
            return KeyCode::MsWheelY;
        default:
            return KeyCode::Unknown;
        }
    }

    bool        is_analog(KeyCode kc)
    {
        switch(kc){
        case KeyCode::GpL2:
        case KeyCode::GpR2:
        case KeyCode::GpLStickLeft:
        case KeyCode::GpLStickRight:
        case KeyCode::GpLStickUp:
        case KeyCode::GpLStickDown:
        case KeyCode::GpRStickLeft:
        case KeyCode::GpRStickRight:
        case KeyCode::GpRStickUp:
        case KeyCode::GpRStickDown:
            return true;
        default:
            return false;
        }
    }

    int         glfw_to_imgui(int)
    {
        //  TODO
        return -1;
    }
}

YQ_TYPE_IMPLEMENT(yq::tachyon::KeyCode)
